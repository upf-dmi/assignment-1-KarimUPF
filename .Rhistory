print(var)
bp <- as_grob(~boxplot(data[, var]))
bp_list <- c(bp, bp_list)
}
#par(mar=c(1,1,1,1))
plot_grid(plotlist = bp_list)
}
make_num_bps(c('age', 'trestbps'))
# For each numeric variable, we will be showing a boxplot
make_num_bps <- function(numeric_var_list) {
bp_list = list()
for (var in numeric_var_list) {
bp <- as_grob(~boxplot(data[, var]))
bp_list <- c(bp, bp_list)
}
#par(mar=c(1,1,1,1))
plot_grid(plotlist = bp_list)
}
make_num_bps(c('age', 'trestbps'))
# For each numeric variable, we will be showing a boxplot
make_num_bps <- function(numeric_var_list) {
bp_list = list()
for (var in numeric_var_list) {
bp <- as_grob(~boxplot(data[, var]))
bp
bp_list <- c(bp, bp_list)
}
#par(mar=c(1,1,1,1))
plot_grid(plotlist = bp_list)
}
make_num_bps(c('age', 'trestbps'))
# For each numeric variable, we will be showing a boxplot
make_num_bps <- function(numeric_var_list) {
bp_list = list()
for (var in numeric_var_list) {
bp <- as_grob(~boxplot(data[, var]))
print(bp)
bp_list <- c(bp, bp_list)
}
#par(mar=c(1,1,1,1))
plot_grid(plotlist = bp_list)
}
make_num_bps(c('age', 'trestbps'))
# For each numeric variable, we will be showing a boxplot
make_num_bps <- function(numeric_var_list) {
bp_list = list()
for (var in numeric_var_list) {
bp <- as_grob(~boxplot(data[, var]))
print(bp)
bp_list <- c(bp, bp_list)
}
print(bp_list)
#par(mar=c(1,1,1,1))
plot_grid(plotlist = bp_list)
}
make_num_bps(c('age', 'trestbps'))
# For each numeric variable, we will be showing a boxplot
make_num_bps <- function(numeric_var_list) {
bp_list = list()
for (var in numeric_var_list) {
bp <- as_grob(~boxplot(data$age))
print(bp)
bp_list <- c(bp, bp_list)
}
print(bp_list)
#par(mar=c(1,1,1,1))
plot_grid(plotlist = bp_list)
}
make_num_bps(c('age', 'trestbps'))
as_grob(~boxplot(data$age))
# For each numeric variable, we will be showing a boxplot
make_num_bps <- function(numeric_var_list) {
bp_list = list()
for (var in numeric_var_list) {
bp <- as_grob(~boxplot(data$age))
bp_list <- c(bp, bp_list)
}
return(bp_list)
}
num_bps <- make_num_bps(c('age', 'trestbps'))
View(num_bps)
plot_grid(plotlist = num_bps)
# For each numeric variable, we will be showing a boxplot
make_num_bps <- function(numeric_var_list) {
bp_list = c()
for (var in numeric_var_list) {
bp <- as_grob(~boxplot(data$age))
bp_list <- c(bp, bp_list)
}
return(bp_list)
}
num_bps <- make_num_bps(c('age', 'trestbps'))
plot_grid(plotlist = num_bps)
num_bps <- make_num_bps(c('age'))
# For each numeric variable, we will be showing a boxplot
make_num_bps <- function(numeric_var_list) {
bp_list = c()
for (var in numeric_var_list) {
bp <- as_grob(~boxplot(data$age))
bp_list <- c(bp, bp_list)
}
return(bp_list)
}
num_bps <- make_num_bps(c('age'))
plot_grid(plotlist = num_bps)
bp <- as_grob(~boxplot(data$age))
plot_grid(plotlist = bp)
par(mar=c(5.1,4.1,4.1,2.1))
par("mar")
plot_grid(plotlist = bp)
bp <- as_grob(~boxplot(data$age))
plot_grid(plotlist = bp)
# For each numeric variable, we will be showing a boxplot
make_num_bps <- function(numeric_var_list) {
bp_list = list()
for (var in numeric_var_list) {
bp <- as_grob(~boxplot(data[[var]]))
bp_list[[var]] <- bp
}
return(bp_list)
}
num_bps <- make_num_bps(c('age'))
plot_grid(plotlist = bp)
# For each numeric variable, we will be showing a boxplot
make_num_bps <- function(numeric_var_list, data) {
bp_list = list()
for (var in numeric_var_list) {
bp <- as_grob(~boxplot(data[[var]]))
bp_list[[var]] <- bp
}
return(bp_list)
}
bp <- as_grob(~boxplot(data$age))
num_bps <- make_num_bps(c('age'))
plot_grid(plotlist = bp, data)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
# Read table
data <- read.table("data/heart_disease_dataset.csv", header=TRUE, na.strings = c("?"))
# Summarize the table
summary(data)
# Check duplicates
data$patient_id[duplicated(data$patient_id)] # No duplicates
data$patient_id = NULL # Remove as it won't be of any help to our data
# Change numerical values to categories
# Sex
data$sex <- factor(ifelse(data$sex == 1, "male", "female"))
# Chest pain type
data$cp <- factor(data$cp, levels = c(1,2,3,4), labels = c("typical angina", "atypical angina","non-anginal pain","asymptomatic"))
# Fasting blood sugar
data$fbs <- factor(ifelse(data$fbs == 1, "TRUE", "FALSE"))
# Resting electrocardiographic results
data$restecg <- factor(data$restecg, levels = c(0,1,2), labels = c("normal", "ST-T wave abnormality","Ventricular hypertrophy"))
# Exercise induced angina
data$exang <- factor(ifelse(data$exang == 0, "No", "Yes"))
# Slope of the peak exercise ST segment
data$slope <- factor(data$slope, levels = c(1,2,3), labels = c("Upsloping", "Flat","Downslopping"))
# "thal" variable
data$thal <- factor(data$thal, levels = c(3,6,7), labels = c("Normal", "Fixed defect","Reversable defect"))
# Diagnosis of heart disease
data$num <- factor(ifelse(data$num > 0, "Disease", ifelse(data$num == 0, "No disease", data$num)))
# Transform "ca" (number of major vessels) into a categorical variable
data$ca <- as.factor(data$ca)
# Then, we check the variables
str(data)
# Handling missing data using mice
library(mice)
imputed_data <- mice(data)
# Store the completed data into our main table
data <- complete(imputed_data)
# Handling outliers
library(cowplot)
# For each numeric variable, we will be showing a boxplot
make_num_bps <- function(numeric_var_list, data) {
bp_list = list()
for (var in numeric_var_list) {
bp <- as_grob(~boxplot(data[[var]]))
bp_list[[var]] <- bp
}
return(bp_list)
}
bp <- as_grob(~boxplot(data$age))
num_bps <- make_num_bps(c('age'))
plot_grid(plotlist = bp, data)
# Handling outliers
library(cowplot)
# For each numeric variable, we will be showing a boxplot
age_bp <- as_grob(~boxplot(data$age))
trestbps_bp <- as_grob(~boxplot(data$trestbps))
plot_grid(plotlist = c(age_bp, trestbps_bp))
par(mar)
par('mar')
dev.off()
plot_grid(plotlist = c(age_bp, trestbps_bp))
View(age_bp)
plot_grid(age_bp, trestbps_bp)
plot_grid(age_bp, trestbps_bp)
# For each numeric variable, we will be showing a boxplot
age_bp <- as_grob(~boxplot(data$age))
# For each numeric variable, we will be showing a boxplot
age_bp <- as_grob(~boxplot(data$age))
trestbps_bp <- as_grob(~boxplot(data$trestbps))
plot_grid(age_bp, trestbps_bp)
chol_bp <- as_grob(~boxplot(data$chol))
thalach_bp <- as_grob(~boxplot(data$thalach))
oldpeak_bp <- as_grob(~boxplot(data$oldpeak))
plot_grid(age_bp, trestbps_bp, chol_bp, thalach_bp, oldpeak_bp)
plot_grid(age_bp, trestbps_bp)
plot_grid(age_bp, trestbps_bp, chol_bp)
library(grid)
library(gridExtra)
age_bp + trestbps_bp
# For each numeric variable, we will be showing a boxplot
age_bp <- as.ggplot(~boxplot(data$age))
library(ggplotify)
# For each numeric variable, we will be showing a boxplot
age_bp <- as.ggplot(~boxplot(data$age))
trestbps_bp <- as.ggplot(~boxplot(data$trestbps))
age_bp + trestbps_bp
grid.arrange(age_bp, trestbps_bp)
?grid.arrange
grid.arrange(age_bp, trestbps_bp, chol_bp, thalach_bp, oldpeak_bp)
chol_bp <- as.ggplot(~boxplot(data$chol))
chol_bp <- as.ggplot(~boxplot(data$chol))
thalach_bp <- as.ggplot(~boxplot(data$thalach))
oldpeak_bp <- as.ggplot(~boxplot(data$oldpeak))
grid.arrange(age_bp, trestbps_bp, chol_bp, thalach_bp, oldpeak_bp)
# We can see some outliers in all the variables except age
# Lets see the outliers
summary(data[c('age','trestbps','chol','thalach','oldpeak')])
install.packages("outliers")
library(outliers)
outlier(data)
outlier(data[c('age','trestbps','chol','thalach','oldpeak')])
outlier(data[c('chol','oldpeak')])
max(data$chol)
tail(data$chol)
tail(sort(data$chol))
tail(sort(data$chol, decreasing = T))
tail(sort(data$chol, decreasing))
?sort
tail(sort(data$chol, decreasing = T))
tail(sort(data$chol, decreasing = F))
tail(sort(data$chol, decreasing))
tail(sort(data$chol))
# Accomodation: Make equal to the next highest value
tail(sort(data$chol))
tail(sort(data$oldpeal))
tail(sort(data$oldpeak))
# Save to new data
new_data <- data
# Accomodation: Make equal to the next highest value
tail(sort(data$chol), n = 15)
tail(sort(data$oldpeak), n = 15)
# Accomodation: Make equal to the next highest value
tail(sort(data$chol), n = 15)
# We can see some outliers in all the variables except age
# Lets see the outliers
summary(data[c('age','trestbps','chol','thalach','oldpeak')])
# Accomodation: Make equal to the next highest value
tail(sort(data$chol), n = 15)
# Accomodation: Make equal to the next highest value
boxplot.stats(data$chol)$out
scores(data$chol, type = "z")
z_scores <- scores(data$chol, type = "z")
z_scores[z_scores > 3]
z_scores[z_scores > -3]
z_scores[z_scores < -3]
z_scores[z_scores > 3]
# Accomodation: Make equal to the next highest value
boxplot.stats(data$chol)$out
outlier(data[c('chol','oldpeak')])
z_scores <- scores(data$chol, type = "z")
z_scores[z_scores > 3]
which(z_scores[z_scores > 3])
?which
which(z_scores < 3)
which(z_scores > 3)
# We can see some outliers in all the variables except age
# Lets see the outliers
summary(data[c('age','trestbps','chol','thalach','oldpeak')])
z_scores <- scores(data$chol, type = "z")
which(z_scores > 3)
# Score them and get there index, if z-score is higher than 3 or lower than -3, then it is considered an outlier
# Chol
z_scores <- scores(new_data$chol, type = "z")
outlier_indices <- which(z_scores > 3 | z_scores < -3)
# Accomodation: Make equal to the next highest value
max_non_outlier <- max(new_data$chol[-outlier_indices])
new_data$chol[outlier_indices] <- max_non_outlier
# trestbps
z_scores <- scores(new_data$trestbps, type = "z")
outlier_indices <- which(z_scores > 3 | z_scores < -3)
# Accomodation: Make equal to the next highest value
max_non_outlier <- max(new_data$trestbps[-outlier_indices])
new_data$trestbps[outlier_indices] <- max_non_outlier
# Chol
z_scores <- scores(new_data$chol, type = "z")
outlier_indices <- which(z_scores > 3 | z_scores < -3)
# Accomodation: Make equal to the next highest value
max_non_outlier <- max(new_data$chol[-outlier_indices])
new_data$chol[outlier_indices] <- max_non_outlier
# oldpeak
z_scores <- scores(new_data$oldpeak, type = "z")
outlier_indices <- which(z_scores > 3 | z_scores < -3)
# Accomodation: Make equal to the next highest value
max_non_outlier <- max(new_data$oldpeak[-outlier_indices])
new_data$oldpeak[outlier_indices] <- max_non_outlier
n_age_bp <- as.ggplot(~boxplot(new_data$age))
n_trestbps_bp <- as.ggplot(~boxplot(new_data$trestbps))
n_chol_bp <- as.ggplot(~boxplot(new_data$chol))
n_thalach_bp <- as.ggplot(~boxplot(new_data$thalach))
n_oldpeak_bp <- as.ggplot(~boxplot(new_data$oldpeak))
grid.arrange(n_age_bp, n_trestbps_bp, n_chol_bp, n_thalach_bp, n_oldpeak_bp)
rm(n_*)
rm(n_age_bp)
rm(n_thalach_bp)
rm(n_chol_bp)
rm(n_trestbps_bp)
rm(n_oldpeak_bp)
library(DataExplorer)
# Using the DataExplorer package, we can now get a report of our new data
DataExplorer::create_report(new_data)
# We will start by Bivariate anaylsis of the 'num' variable (Diagnosis of heart disease)
new_data %>% gather(cols, value, -num) %>% ggplot(aes(x = value, fill = num)) +
geom_bar(position = "dodge") +
facet_wrap(~ cols, scales = "free") +
scale_fill_manual(values = c("tomato", "lightskyblue3")) +
xlab("Levels of each variable") + ylab("Frequency") +
ggtitle("Comparison of Categorical Variables\n for Disease and No Disease condition") +
theme_bw() +
theme(plot.title = element_text(face = "bold", hjust = 0.5))
library(dplyr)
# We will start by Bivariate anaylsis of the 'num' variable (Diagnosis of heart disease)
new_data %>% gather(cols, value, -num) %>% ggplot(aes(x = value, fill = num)) +
geom_bar(position = "dodge") +
facet_wrap(~ cols, scales = "free") +
scale_fill_manual(values = c("tomato", "lightskyblue3")) +
xlab("Levels of each variable") + ylab("Frequency") +
ggtitle("Comparison of Categorical Variables\n for Disease and No Disease condition") +
theme_bw() +
theme(plot.title = element_text(face = "bold", hjust = 0.5))
??gather
library(tidyr)
# We will start by Bivariate anaylsis of the 'num' variable (Diagnosis of heart disease)
new_data %>% gather(cols, value, -num) %>% ggplot(aes(x = value, fill = num)) +
geom_bar(position = "dodge") +
facet_wrap(~ cols, scales = "free") +
scale_fill_manual(values = c("tomato", "lightskyblue3")) +
xlab("Levels of each variable") + ylab("Frequency") +
ggtitle("Comparison of Categorical Variables\n for Disease and No Disease condition") +
theme_bw() +
theme(plot.title = element_text(face = "bold", hjust = 0.5))
View(new_data)
?gather
# 1. Categorical variables
new_data[, c("sex", "fbs", "exang", "ca", "num")] %>% gather(cols, value, -num) %>% ggplot(aes(x = value, fill = num)) +
geom_bar(position = "dodge") +
facet_wrap(~ cols, scales = "free") +
scale_fill_manual(values = c("tomato", "lightskyblue3")) +
xlab("Levels of each variable") + ylab("Frequency") +
ggtitle("Comparison of Categorical Variables\n for Disease and No Disease condition") +
theme_bw() +
theme(plot.title = element_text(face = "bold", hjust = 0.5))
# 1. Categorical variables
new_data[, c("sex", "fbs", "exang", "ca", "num")] %>% gather(cols, value, -num) %>% ggplot(aes(x = value, fill = num)) +
geom_bar(position = "dodge") +
facet_wrap(~ cols, scales = "free") +
scale_fill_manual(values = c("red", "lightgreen")) +
xlab("Levels of each variable") + ylab("Frequency") +
ggtitle("Comparison of Categorical Variables\n for Disease and No Disease condition") +
theme_bw() +
theme(plot.title = element_text(face = "bold", hjust = 0.5))
# 1. Categorical variables
new_data[, c("sex", "fbs", "exang", "ca", "num")] %>% gather(cols, value, -num) %>% ggplot(aes(x = value, fill = num)) +
geom_bar(position = "dodge") +
facet_wrap(~ cols, scales = "free") +
scale_fill_manual(values = c("red", "lightgreen")) +
xlab("Levels of each variable") + ylab("Frequency") +
ggtitle("Comparison of Categorical Variables\n for diagnosis of heart disease") +
theme_bw() +
theme(plot.title = element_text(face = "bold", hjust = 0.5))
# 1. Categorical variables
new_data[, c("sex", "fbs", "exang", "ca", "num")] %>% gather(cols, value, -num) %>% ggplot(aes(x = value, fill = num)) +
geom_bar(position = "dodge") +
facet_wrap(~ cols, scales = "free", labeller = labeller(cols = c(
sex = "Gender (Male/Female)",
fbs = "Fasting Blood Sugar > 120 mg/dl",
exang = "Exercise Induced Angina",
ca = "Number of Major Vessels (0-3)"
))) +
scale_fill_manual(values = c("red", "lightgreen"), labels = c("Disease", "No Disease")) +
xlab("Levels of each variable") + ylab("Frequency") +
ggtitle("Comparison of Categorical Variables\n for diagnosis of heart disease") +
theme_bw() +
theme(plot.title = element_text(face = "bold", hjust = 0.5))
# 1. Categorical variables
new_data[, c("sex", "fbs", "exang", "ca", "num")] %>% gather(cols, value, -num) %>% ggplot(aes(x = value, fill = num)) +
geom_bar(position = "dodge") +
facet_wrap(~ cols, scales = "free", labeller = labeller(cols = c(
sex = "Gender (Male/Female)",
fbs = "Fasting Blood Sugar > 120 mg/dl",
exang = "Exercise Induced Angina",
ca = "Number of Major Vessels (0-3)"
))) +
scale_fill_manual(values = c("red", "lightgreen"), labels = c("Disease", "No Disease")) +
ylab("Frequency") +
ggtitle("Comparison of Categorical Variables\n for diagnosis of heart disease") +
theme_bw() +
theme(plot.title = element_text(face = "bold", hjust = 0.5))
# 1. Categorical variables
new_data[, c("sex", "fbs", "exang", "ca", "num")] %>% gather(cols, value, -num) %>% ggplot(aes(x = value, fill = num)) +
geom_bar(position = "dodge") +
facet_wrap(~ cols, scales = "free", labeller = labeller(cols = c(
sex = "Gender (Male/Female)",
fbs = "Fasting Blood Sugar > 120 mg/dl",
exang = "Exercise Induced Angina",
ca = "Number of Major Vessels (0-3)"
))) +
scale_fill_manual(values = c("red", "lightgreen"), labels = c("Disease", "No Disease")) +
xlab("Levels") + ylab("Frequency") +
ggtitle("Comparison of categorical variables\n for diagnosis of heart disease") +
theme_bw() +
theme(plot.title = element_text(face = "bold", hjust = 0.5))
# 1. Categorical variables
new_data[, c("sex", "fbs", "exang", "ca", "num")] %>% gather(cols, value, -num) %>% ggplot(aes(x = value, fill = num)) +
geom_bar(position = "dodge") +
facet_wrap(~ cols, scales = "free", labeller = labeller(cols = c(
sex = "Gender (Male/Female)",
fbs = "Fasting Blood Sugar > 120 mg/dl",
exang = "Exercise Induced Angina",
ca = "Number of Major Vessels (0-3)"
))) +
scale_fill_manual(values = c("red", "lightgreen"), labels = c("Disease", "No Disease")) +
labs(fill = "Heart Disease") +
xlab("Levels") + ylab("Frequency") +
ggtitle("Comparison of categorical variables\n for diagnosis of heart disease") +
theme_bw() +
theme(plot.title = element_text(face = "bold", hjust = 0.5))
# 1. Categorical variables
new_data[, c("sex", "fbs", "exang", "ca", "cp", "restecg", "slope", "thal", "num")] %>% gather(cols, value, -num) %>% ggplot(aes(x = value, fill = num)) +
geom_bar(position = "dodge") +
facet_wrap(~ cols, scales = "free", labeller = labeller(cols = c(
sex = "Gender (Male/Female)",
fbs = "Fasting Blood Sugar > 120 mg/dl",
exang = "Exercise Induced Angina",
ca = "Number of Major Vessels (0-3)"
))) +
scale_fill_manual(values = c("red", "lightgreen"), labels = c("Disease", "No Disease")) +
labs(fill = "Heart Disease") +
xlab("Levels") + ylab("Frequency") +
ggtitle("Comparison of categorical variables\n for diagnosis of heart disease") +
theme_bw() +
theme(plot.title = element_text(face = "bold", hjust = 0.5))
# 1. Categorical variables
new_data[, c("sex", "fbs", "exang", "ca", "cp", "restecg", "slope", "thal", "num")] %>% gather(cols, value, -num) %>% ggplot(aes(x = value, fill = num)) +
geom_bar(position = "dodge") +
facet_wrap(~ cols, scales = "free", labeller = labeller(cols = c(
sex = "Gender (Male/Female)",
fbs = "Fasting Blood Sugar > 120 mg/dl",
exang = "Exercise Induced Angina",
ca = "Number of Major Vessels (0-3)",
cp = "Chest pain type",
restecg = "Resting electrocardiographic results",
slope = "Slope of the peak exercise ST segment",
thal = "Thalassemia"
))) +
scale_fill_manual(values = c("red", "lightgreen"), labels = c("Disease", "No Disease")) +
labs(fill = "Heart Disease") +
xlab("Levels") + ylab("Frequency") +
ggtitle("Comparison of categorical variables\n for diagnosis of heart disease") +
theme_bw() +
theme(plot.title = element_text(face = "bold", hjust = 0.5))
ggplot(new_data, aes(x = age, y = oldpeak, color = num)) +
geom_point(position = "dodge") +
scale_fill_manual(values = c("tomato", "lightskyblue3")) +
xlab("Age") + ylab("ST depression induced \n by exercise relative to rest") +
theme_bw()
# 2. Continous variables
new_data[, c("age", "chol", "oldpeak", "thalach", "trestbps", "num")] %>%
gather(cols, value, -num) %>%
ggplot(aes(x = num, y = value, fill = num)) +
geom_violin(trim = FALSE, alpha = 0.7) +
facet_wrap(~ cols, scales = "free", labeller = labeller(cols = c(
age = "Age",
chol = "Serum Cholesterol (mg/dl)",
oldpeak = "ST Depression (Exercise relative to rest)",
thalach = "Max Heart Rate Achieved",
trestbps = "Resting Blood Pressure (mm Hg)"
))) +
scale_fill_manual(values = c("red", "lightgreen"), labels = c("Disease", "No Disease")) +
labs(fill = "Heart Disease", x = "Heart Disease Status", y = "Values") +
ggtitle("Comparison of Continuous Variables\n for Diagnosis of Heart Disease") +
theme_bw() +
theme(plot.title = element_text(face = "bold", hjust = 0.5))
# 2. Continous variables
new_data[, c("age", "chol", "oldpeak", "thalach", "trestbps", "num")] %>%
gather(cols, value, -num) %>%
ggplot(aes(x = num, y = value, fill = num)) +
geom_violin(trim = FALSE, alpha = 0.7) +
facet_wrap(~ cols, scales = "free", labeller = labeller(cols = c(
age = "Age",
chol = "Serum Cholesterol (mg/dl)",
oldpeak = "ST Depression (Exercise relative to rest)",
thalach = "Max Heart Rate Achieved",
trestbps = "Resting Blood Pressure (mm Hg)"
))) +
scale_fill_manual(values = c("red", "lightgreen"), labels = c("Disease", "No Disease")) +
labs(fill = "Heart Disease", x = "Heart Disease Status", y = "Values") +
ggtitle("Comparison of Continuous Variables\n for Diagnosis of Heart Disease") +
theme_bw() +
theme(plot.title = element_text(face = "bold", hjust = 0.5))
